from dataclasses import dataclass
from pathlib import Path

import numpy as np
import pkg_resources

from cbctmc.common_types import PathLike

BOWTIE_FILTERS = {
    "half": np.array(
        [
            25.92,
            25.923,
            25.927,
            25.93,
            25.933,
            25.936,
            25.94,
            25.943,
            25.946,
            25.949,
            25.953,
            25.956,
            25.959,
            25.963,
            25.966,
            25.969,
            25.972,
            25.976,
            25.979,
            25.982,
            25.985,
            25.989,
            25.992,
            25.995,
            25.999,
            26.002,
            26.005,
            26.008,
            26.012,
            26.015,
            26.018,
            26.022,
            26.025,
            26.028,
            26.031,
            26.035,
            26.038,
            26.041,
            26.044,
            26.048,
            26.051,
            26.054,
            26.058,
            26.061,
            26.064,
            26.067,
            26.071,
            26.074,
            26.077,
            26.08,
            26.084,
            26.087,
            26.09,
            26.094,
            26.097,
            26.1,
            26.103,
            26.107,
            26.11,
            26.113,
            26.116,
            26.12,
            26.123,
            26.126,
            26.13,
            26.133,
            26.136,
            26.139,
            26.143,
            26.146,
            26.149,
            26.153,
            26.156,
            26.159,
            26.162,
            26.166,
            26.169,
            26.172,
            26.175,
            26.179,
            26.182,
            26.185,
            26.189,
            26.192,
            26.195,
            26.198,
            26.202,
            26.205,
            26.208,
            26.211,
            26.215,
            26.218,
            26.221,
            26.225,
            26.228,
            26.231,
            26.234,
            26.238,
            26.241,
            26.244,
            26.247,
            26.251,
            26.254,
            26.257,
            26.261,
            26.264,
            26.267,
            26.27,
            26.274,
            26.277,
            26.28,
            26.284,
            26.287,
            26.29,
            26.293,
            26.297,
            26.3,
            26.303,
            26.306,
            26.31,
            26.313,
            26.316,
            26.32,
            26.323,
            26.326,
            26.329,
            26.333,
            26.336,
            26.339,
            26.342,
            26.346,
            26.349,
            26.352,
            26.356,
            26.359,
            26.362,
            26.365,
            26.369,
            26.372,
            26.375,
            26.378,
            26.382,
            26.385,
            26.388,
            26.392,
            26.395,
            26.398,
            26.401,
            26.405,
            26.408,
            26.411,
            26.414,
            26.418,
            26.421,
            26.424,
            26.428,
            26.431,
            26.434,
            26.437,
            26.441,
            26.444,
            26.447,
            26.451,
            26.454,
            26.457,
            26.46,
            26.464,
            26.467,
            26.47,
            26.473,
            26.477,
            26.48,
            26.483,
            26.487,
            26.49,
            26.493,
            26.496,
            26.5,
            26.503,
            26.506,
            26.509,
            26.513,
            26.516,
            26.519,
            26.523,
            26.526,
            26.529,
            26.532,
            26.536,
            26.539,
            26.542,
            26.545,
            26.549,
            26.552,
            26.555,
            26.559,
            26.562,
            26.565,
            26.568,
            26.572,
            26.575,
            26.578,
            26.582,
            26.585,
            26.588,
            26.591,
            26.595,
            26.598,
            26.601,
            26.604,
            26.608,
            26.611,
            26.614,
            26.618,
            26.621,
            26.624,
            26.627,
            26.631,
            26.634,
            26.637,
            26.64,
            26.644,
            26.647,
            26.65,
            26.654,
            26.657,
            26.66,
            26.663,
            26.667,
            26.67,
            26.674,
            26.677,
            26.681,
            26.684,
            26.688,
            26.691,
            26.695,
            26.699,
            26.702,
            26.706,
            26.709,
            26.713,
            26.716,
            26.72,
            26.723,
            26.727,
            26.73,
            26.734,
            26.737,
            26.741,
            26.744,
            26.748,
            26.751,
            26.754,
            26.758,
            26.761,
            26.765,
            26.768,
            26.772,
            26.775,
            26.778,
            26.782,
            26.785,
            26.788,
            26.792,
            26.795,
            26.799,
            26.802,
            26.805,
            26.809,
            26.812,
            26.815,
            26.819,
            26.822,
            26.825,
            26.829,
            26.832,
            26.835,
            26.838,
            26.842,
            26.845,
            26.848,
            26.852,
            26.855,
            26.858,
            26.861,
            26.865,
            26.868,
            26.871,
            26.874,
            26.877,
            26.881,
            26.884,
            26.887,
            26.89,
            26.893,
            26.897,
            26.9,
            26.903,
            26.906,
            26.909,
            26.912,
            26.915,
            26.919,
            26.922,
            26.925,
            26.928,
            26.931,
            26.934,
            26.937,
            26.94,
            26.943,
            26.946,
            26.95,
            26.953,
            26.956,
            26.959,
            26.962,
            26.965,
            26.968,
            26.971,
            26.974,
            26.977,
            26.98,
            26.983,
            26.986,
            26.989,
            26.992,
            26.995,
            26.998,
            27.001,
            27.004,
            27.007,
            27.01,
            27.012,
            27.015,
            27.018,
            27.021,
            27.024,
            27.027,
            27.03,
            27.033,
            27.036,
            27.039,
            27.041,
            27.044,
            27.047,
            27.05,
            27.053,
            27.056,
            27.059,
            27.061,
            27.064,
            27.067,
            27.07,
            27.073,
            27.075,
            27.078,
            27.081,
            27.084,
            27.087,
            27.089,
            27.092,
            27.095,
            27.098,
            27.1,
            27.103,
            27.106,
            27.109,
            27.111,
            27.114,
            27.117,
            27.119,
            27.122,
            27.125,
            27.127,
            27.13,
            27.133,
            27.135,
            27.138,
            27.141,
            27.143,
            27.146,
            27.149,
            27.151,
            27.154,
            27.157,
            27.159,
            27.162,
            27.164,
            27.167,
            27.169,
            27.172,
            27.175,
            27.177,
            27.18,
            27.182,
            27.185,
            27.187,
            27.19,
            27.192,
            27.195,
            27.197,
            27.2,
            27.202,
            27.205,
            27.207,
            27.21,
            27.212,
            27.215,
            27.217,
            27.22,
            27.222,
            27.225,
            27.227,
            27.229,
            27.232,
            27.234,
            27.237,
            27.239,
            27.242,
            27.244,
            27.246,
            27.249,
            27.251,
            27.253,
            27.256,
            27.258,
            27.26,
            27.263,
            27.265,
            27.267,
            27.27,
            27.272,
            27.274,
            27.277,
            27.279,
            27.281,
            27.284,
            27.286,
            27.288,
            27.288,
            27.276,
            27.264,
            27.251,
            27.237,
            27.221,
            27.205,
            27.187,
            27.169,
            27.149,
            27.128,
            27.106,
            27.082,
            27.057,
            27.031,
            27.003,
            26.974,
            26.943,
            26.911,
            26.877,
            26.841,
            26.804,
            26.765,
            26.723,
            26.68,
            26.635,
            26.587,
            26.537,
            26.485,
            26.43,
            26.372,
            26.312,
            26.249,
            26.182,
            26.113,
            26.04,
            25.964,
            25.884,
            25.801,
            25.713,
            25.623,
            25.528,
            25.429,
            25.327,
            25.22,
            25.109,
            24.993,
            24.873,
            24.748,
            24.618,
            24.483,
            24.342,
            24.196,
            24.044,
            23.886,
            23.721,
            23.549,
            23.37,
            23.183,
            22.987,
            22.784,
            22.571,
            22.349,
            22.118,
            21.878,
            21.629,
            21.371,
            21.104,
            20.83,
            20.55,
            20.265,
            19.977,
            19.688,
            19.398,
            19.11,
            18.822,
            18.536,
            18.252,
            17.969,
            17.689,
            17.412,
            17.137,
            16.866,
            16.599,
            16.334,
            16.074,
            15.818,
            15.565,
            15.317,
            15.073,
            14.833,
            14.597,
            14.365,
            14.138,
            13.915,
            13.696,
            13.481,
            13.27,
            13.064,
            12.861,
            12.662,
            12.467,
            12.276,
            12.089,
            11.905,
            11.725,
            11.548,
            11.374,
            11.204,
            11.036,
            10.872,
            10.71,
            10.551,
            10.395,
            10.241,
            10.09,
            9.941,
            9.795,
            9.65,
            9.509,
            9.369,
            9.231,
            9.096,
            8.962,
            8.83,
            8.701,
            8.573,
            8.447,
            8.323,
            8.2,
            8.079,
            7.96,
            7.843,
            7.727,
            7.613,
            7.5,
            7.389,
            7.279,
            7.171,
            7.065,
            6.959,
            6.856,
            6.753,
            6.652,
            6.552,
            6.454,
            6.357,
            6.261,
            6.167,
            6.074,
            5.982,
            5.891,
            5.801,
            5.713,
            5.626,
            5.54,
            5.455,
            5.371,
            5.289,
            5.207,
            5.127,
            5.048,
            4.97,
            4.892,
            4.816,
            4.741,
            4.668,
            4.595,
            4.523,
            4.452,
            4.382,
            4.313,
            4.245,
            4.179,
            4.113,
            4.048,
            3.984,
            3.921,
            3.859,
            3.798,
            3.737,
            3.678,
            3.62,
            3.562,
            3.506,
            3.45,
            3.395,
            3.341,
            3.288,
            3.236,
            3.185,
            3.134,
            3.085,
            3.036,
            2.988,
            2.941,
            2.895,
            2.849,
            2.804,
            2.76,
            2.717,
            2.675,
            2.634,
            2.593,
            2.553,
            2.514,
            2.476,
            2.438,
            2.401,
            2.365,
            2.33,
            2.296,
            2.262,
            2.229,
            2.197,
            2.166,
            2.135,
            2.106,
            2.077,
            2.048,
            2.021,
            1.994,
            1.968,
            1.943,
            1.919,
            1.895,
            1.872,
            1.85,
            1.829,
            1.808,
            1.788,
            1.769,
            1.75,
            1.733,
            1.715,
            1.699,
            1.684,
            1.669,
            1.654,
            1.641,
            1.628,
            1.616,
            1.605,
            1.594,
            1.584,
            1.575,
            1.567,
            1.559,
            1.552,
            1.545,
            1.54,
            1.535,
            1.531,
            1.527,
            1.524,
            1.522,
            1.521,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.52,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.521,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
            1.522,
        ]
    )
}

# mu given in 1/mm
FILTERS = {
    "titanium": np.array(
        [
            946.26,
            946.26,
            244.225,
            98.2308,
            49.566,
            254.589,
            154.556,
            107.243,
            77.9538,
            57.6768,
            43.573,
            33.8851,
            26.9008,
            21.7189,
            17.7987,
            14.7346,
            12.3464,
            10.4539,
            8.92188,
            7.6602,
            6.66888,
            5.81274,
            5.09178,
            4.50149,
            3.99682,
            3.56425,
            3.19025,
            2.87032,
            2.59095,
            2.35213,
            2.13584,
            1.9511,
            1.78438,
            1.63568,
            1.505,
            1.39235,
            1.28421,
            1.19409,
            1.10848,
            1.03187,
            0.964284,
            0.9012,
            0.842622,
            0.793056,
            0.74349,
            0.702936,
            0.662382,
            0.626334,
            0.590286,
            0.56325,
            0.531708,
            0.504672,
            0.482142,
            0.459612,
            0.437983,
            0.418607,
            0.400133,
            0.38301,
            0.367239,
            0.352369,
            0.338401,
            0.325333,
            0.313167,
            0.301451,
            0.290637,
            0.280724,
            0.270811,
            0.261799,
            0.253688,
            0.245577,
            0.237917,
            0.230707,
            0.223948,
            0.217189,
            0.211331,
            0.205474,
            0.200066,
            0.194659,
            0.189703,
            0.184746,
            0.18024,
            0.176185,
            0.172129,
            0.168074,
            0.164018,
            0.160864,
            0.157259,
            0.154105,
            0.150951,
            0.147797,
            0.145093,
            0.141939,
            0.139235,
            0.136982,
            0.134279,
            0.132026,
            0.129773,
            0.12752,
            0.125717,
            0.123464,
            0.121662,
            0.11986,
            0.118057,
            0.116255,
            0.114452,
            0.113101,
            0.111298,
            0.109946,
            0.108595,
            0.107243,
            0.10544,
            0.104539,
            0.103187,
            0.101836,
            0.100484,
            0.0995826,
            0.0982308,
            0.0973296,
            0.0964284,
            0.0950766,
            0.0941754,
            0.0932742,
            0.092373,
            0.0914718,
            0.0905706,
            0.0896694,
            0.0887682,
            0.087867,
            0.0874164,
            0.0865152,
            0.085614,
            0.0851634,
            0.0842622,
            0.083361,
            0.0829104,
            0.0824598,
            0.0815586,
            0.081108,
            0.0802068,
            0.0797562,
        ]
    ),
    "aluminium": np.array(
        [
            108.54,
            108.54,
            348.3,
            140.13,
            70.2,
            39.96,
            24.759,
            16.389,
            11.394,
            8.235,
            6.129,
            4.698,
            3.672,
            2.916,
            2.3733,
            1.9521,
            1.6254,
            1.3689,
            1.1637,
            0.999,
            0.8667,
            0.756,
            0.6642,
            0.5886,
            0.5238,
            0.4698,
            0.4239,
            0.3834,
            0.3483,
            0.3186,
            0.2916,
            0.26892,
            0.24867,
            0.23085,
            0.21492,
            0.20088,
            0.18846,
            0.17712,
            0.16686,
            0.15768,
            0.14931,
            0.14202,
            0.135,
            0.12879,
            0.12312,
            0.11799,
            0.1134,
            0.10881,
            0.10476,
            0.10125,
            0.09774,
            0.0945,
            0.09153,
            0.08883,
            0.0864,
            0.08397,
            0.08181,
            0.07965,
            0.07776,
            0.07587,
            0.07425,
            0.07263,
            0.07101,
            0.06966,
            0.06831,
            0.06696,
            0.06588,
            0.0648,
            0.06372,
            0.06264,
            0.06156,
            0.06075,
            0.05994,
            0.05913,
            0.05832,
            0.05751,
            0.0567,
            0.05616,
            0.05535,
            0.05481,
            0.05427,
            0.05373,
            0.05292,
            0.05238,
            0.05211,
            0.05157,
            0.05103,
            0.05049,
            0.05022,
            0.04968,
            0.04941,
            0.04887,
            0.0486,
            0.04806,
            0.04779,
            0.04752,
            0.04698,
            0.04671,
            0.04644,
            0.04617,
            0.0459,
            0.04563,
            0.04536,
            0.04509,
            0.04482,
            0.04455,
            0.04428,
            0.04401,
            0.04374,
            0.04347,
            0.0432,
            0.0432,
            0.04293,
            0.04266,
            0.04239,
            0.04212,
            0.04212,
            0.04185,
            0.04158,
            0.04158,
            0.04131,
            0.04104,
            0.04104,
            0.04077,
            0.0405,
            0.0405,
            0.04023,
            0.04023,
            0.03996,
            0.03996,
            0.03969,
            0.03942,
            0.03942,
            0.03915,
            0.03915,
            0.03888,
            0.03888,
            0.03861,
            0.03861,
            0.03834,
        ]
    ),
}


VARIAN_NORM_SPECTRA = {
    125: np.array(
        [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            10.639,
            248.05,
            1660.5,
            7429.5,
            24296,
            62165,
            132640,
            245740,
            406790,
            615180,
            863990,
            1144600,
            1443500,
            1753900,
            2061900,
            2357500,
            2643100,
            2898900,
            3124700,
            3332500,
            3512900,
            3664800,
            3792700,
            3891600,
            3965800,
            4024600,
            4063500,
            4082200,
            4090200,
            4087200,
            4069200,
            4040700,
            4006200,
            3966200,
            3915600,
            3859700,
            3803100,
            3740900,
            3673400,
            3605300,
            3536900,
            3468000,
            3398600,
            3324100,
            3249200,
            6994500,
            13600000,
            9714700,
            2966600,
            2895400,
            2824000,
            2752400,
            2685600,
            2618600,
            4795700,
            4733800,
            3012500,
            2798700,
            2008200,
            1964900,
            1921500,
            1878100,
            1839500,
            1796000,
            1752400,
            1713700,
            1675000,
            1631300,
            1587500,
            1548600,
            1509900,
            1470900,
            1431900,
            1392900,
            1353900,
            1315000,
            1280800,
            1246600,
            1207500,
            1173400,
            1139200,
            1100000,
            1065800,
            1031600,
            996070,
            963300,
            929730,
            896820,
            864380,
            831850,
            799680,
            767740,
            736180,
            704720,
            673310,
            642200,
            611070,
            580370,
            549740,
            518920,
            488360,
            457420,
            426650,
            395730,
            364250,
            332470,
            299060,
            265260,
            231820,
            198550,
            157260,
            98800,
            32590,
        ]
    )
}


@dataclass
class Spectrum:
    filepath: Path

    @classmethod
    def from_file(cls, filepath: PathLike) -> "Spectrum":
        filepath = Path(filepath)

        return cls(
            filepath=filepath,
        )

    @classmethod
    def from_package_resources(cls, filename: str):
        filepath = pkg_resources.resource_filename(
            "cbctmc", f"assets/spectra/{filename}"
        )

        return cls.from_file(filepath)

    def get_spectrum(self):
        return np.loadtxt(self.filepath, dtype=np.float64)


def filter_spectrum(
    spectrum: np.ndarray, filter_mus: np.ndarray, filter_thickness: float
) -> np.ndarray:
    """Filter a given xray spectrum with the given filter material and
    thickness.

    The filtering is modeled by Beer-Lamber's law.
    """
    if len(spectrum) != len(filter_mus):
        raise ValueError("spectrum and filter_mus must have the same length")

    if filter_thickness < 0:
        raise ValueError("filter_thickness must be positive")

    filtered_spectrum = spectrum * np.exp(-filter_mus * filter_thickness)

    return filtered_spectrum


SPECTRUM_125KVP_BOONE_FILTERED = Spectrum.from_package_resources("125kVp_0.89mmTi.spc")
SPECTRUM_125KVP_VARIAN_NORM = Spectrum.from_package_resources("125kVp_varian_norm.spc")
SPECTRUM_125KVP_VARIAN_NORM_FILTERED = Spectrum.from_package_resources(
    "125kVp_0.89mmTi_varian_norm.spc"
)
# this is pseudo-bowtie spectrum (spectrum filtered by average thickness of bowtie filter)
SPECTRUM_125KVP_VARIAN_NORM_FILTERED_BOWTIE = Spectrum.from_package_resources(
    "125kVp_0.89mmTi_half_bowtie_varian_norm.spc"
)

# this is the default spectrum
SPECTRUM_125KVP = SPECTRUM_125KVP_VARIAN_NORM_FILTERED


if __name__ == "__main__":
    boone = SPECTRUM_125KVP.get_spectrum()

    import matplotlib.pyplot as plt

    s = filter_spectrum(
        spectrum=VARIAN_NORM_SPECTRA[125],
        filter_mus=FILTERS["titanium"][:125],
        filter_thickness=0.89,
    )
    s2 = filter_spectrum(
        spectrum=s,
        filter_mus=FILTERS["aluminium"][:125],
        filter_thickness=BOWTIE_FILTERS["half"].mean(),
    )

    plt.plot(
        VARIAN_NORM_SPECTRA[125] / VARIAN_NORM_SPECTRA[125][120], label="varian norm"
    )
    plt.plot(s / s[120], label="filtered")
    plt.plot(s2 / s2[120], label="filtered + bowtie")
    plt.plot(boone[:, 0] / 1000, boone[:, 1], label="boone")
    plt.legend()

    for i in range(125):
        print(f"{i+1:.1f}e3 {s2[i]}")
